/*
 * Remote Numpad - a numpad application on Android for PCs lacking one.
 * Copyright (C) 2016-2025 Guillaume Payet
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <https://www.gnu.org/licenses/>.
 */

import org.jetbrains.kotlin.gradle.dsl.JvmTarget

plugins {
    alias(libs.plugins.android.application)
    alias(libs.plugins.kotlin.android)
}

android {
    compileSdkVersion 36

    defaultConfig {
        applicationId 'com.guillaumepayet.remotenumpad'
        minSdk 21
        targetSdk 36
        versionCode 48
        versionName '2.2.0'

        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
    }

    buildTypes {
        release {
            minifyEnabled true
            shrinkResources = true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlin {
        compilerOptions {
            jvmTarget = JvmTarget.JVM_17
        }
    }
    buildFeatures {
        viewBinding = true
    }
    namespace = 'com.guillaumepayet.remotenumpad'
    testOptions {
        unitTests.returnDefaultValues = true
    }
}

dependencies {

    implementation libs.androidx.core.ktx
    implementation libs.androidx.appcompat
    implementation libs.androidx.constraintlayout
    implementation libs.androidx.fragment.ktx
    implementation libs.androidx.preference.ktx
    implementation libs.androidx.activity.ktx
    implementation libs.android.material

    // PowerMock allows mocking superclasses for custom View classes.
    // This package depends on JUnit 4 (so no need to import it).
    testImplementation libs.powermock.junit.module

    // This package adds interoperability between PowerMock and Mockito.
    // This package depends on Mockito 2 (so no need to import it).
    testImplementation libs.powermock.mockito.api

    androidTestImplementation libs.androidx.junit
    androidTestImplementation libs.androidx.espresso.core
}
